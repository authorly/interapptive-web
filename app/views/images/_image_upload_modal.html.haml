#image-upload-modal.modal
  .modal-header
    = link_to 'x', '#', :class => 'close', 'data-dismiss' => 'modal'
    %h3.modal-title Image Library

  .modal-body
    = form_for Image.new, :html => { :multipart => true, :id => "fileupload"  } do |f|
      / The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload
      .row.fileupload-buttonbar
        .span5
          / The fileinput-button span is used to style the file input field as button
          %span.btn.btn-success.fileinput-button
            %i.icon-plus.icon-white
            %span Add images...
            = f.file_field :image, :multiple => true
          %button.btn.btn-primary.start{:type => "submit"}
            %i.icon-upload.icon-white
            %span Start upload
          %button.btn.btn-warning.cancel{:type => "reset"}
            %i.icon-ban-circle.icon-white
            %span Cancel upload
          %button.btn.btn-danger.delete{:type => "button"}
            %i.icon-trash.icon-white
            %span Delete
          %input.toggle{:type => "checkbox"}
        .span3
          / The global progress bar
          .progress.progress-success.progress-striped.active.fade
            .bar{:style => "width:0%;"}
      / The loading indicator is shown during image processing
      .fileupload-loading
      %br
        / The table listing the files available for upload/download
        %table.table.table-striped
          %tbody.files{"data-target" => "#modal-gallery", "data-toggle" => "modal-gallery"}

  .modal-footer
    %a.btn{ :href => "#", :data => { :dismiss => 'modal' }} Close

:javascript
  var fileUploadErrors = {
    maxFileSize: 'File is too big',
    minFileSize: 'File is too small',
    acceptFileTypes: 'Filetype not allowed',
    maxNumberOfFiles: 'Max number of files exceeded',
    uploadedBytes: 'Uploaded bytes exceed file size',
    emptyResult: 'Empty file upload result'
  };

/ The template to display files available for upload
%script#template-upload{:type => "text/x-tmpl"}
  {% for (var i=0, file; file=o.files[i]; i++) { %}
  %tr.template-upload.fade
    %td.preview
      %span.fade
    %td.name
      %span {%=file.name%}
    %td.size
      %span {%=o.formatFileSize(file.size)%}
    {% if (file.error) { %}
    %td.error{:colspan => "5"}
      %span.label.label-important {%=locale.fileupload.error%}
      {%=locale.fileupload.errors[file.error] || file.error%}
    {% } else if (o.files.valid && !i) { %}
    %td
      .progress.progress-success.progress-striped.active
        .bar{:style => "width:0%;"}
    %td.start
      {% if (!o.options.autoUpload) { %}
      %button.btn.btn-primary
        %i.icon-upload.icon-white
        %span {%=locale.fileupload.start%}
      {% } %}
    {% } else { %}
    %td{:colspan => "5"}
    {% } %}
    %td.cancel
      {% if (!i) { %}
      %button.btn.btn-warning
        %i.icon-ban-circle.icon-white
        %span {%=locale.fileupload.cancel%}
      {% } %}
  {% } %}

/ The template to display files available for download
%script#template-download{:type => "text/x-tmpl"}
  {% for (var i=0, file; file=o.files[i]; i++) { %}
  %tr.template-download.fade
    {% if (file.error) { %}
    %td
    %td.name
      %span {%=file.name%}
    %td.size
      %span {%=o.formatFileSize(file.size)%}
    %td.error{:colspan => "5"}
      %span.label.label-important {%=locale.fileupload.error%}
      {%=locale.fileupload.errors[file.error] || file.error%}
    {% } else { %}
    %td.preview
      {% if (file.thumbnail_url) { %}
      %a{:download => "{%=file.name%}", :href => "{%=file.url%}", :rel => "gallery", :title => "{%=file.name%}"}
        %img{:src => "{%=file.thumbnail_url%}"}/
      {% } %}
    %td.name
      %a{:download => "{%=file.name%}", :href => "{%=file.url%}", :rel => "{%= file.thumbnail_url %}", :title => "{%=file.name%}"} {%=file.name%}
    %td.size
      %span {%=o.formatFileSize(file.size)%}
    %td{:colspan => "5"}
    {% } %}
    %td.delete
      %button.btn.btn-danger{"data-type" => "{%=file.delete_type%}", "data-url" => "{%=file.delete_url%}"}
        %i.icon-trash.icon-white
        %span {%=locale.fileupload.destroy%}
      %input{:name => "delete", :type => "checkbox", :value => "1"}
  {% } %}
